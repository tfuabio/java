// 「文」＝セミコロン（;）で終わる
// 「ブロック」＝波カッコ（{}）で囲まれた、プログラムの塊
//　　　・処理を記述する「メソッド」のメソッドブロック
//　　　・メソッドをまとめる「クラス」のクラスブロック
// メソッドは、クラスの内側に記述する

// 改行や空白は、単語の途中でなければどこに入れても自由
// まったく改行がなくてもコンパイルエラーにはなりませんが、プログラムを分かりやすくするために、適切な箇所に改行や空白を入れます。
// また、ブロックごとに「インデント（字下げ）」を行って、処理の区切りを分かりやすくするのが一般的です。

//コーディング規約＝ソースコードの書き方を定めたルール
//「インデントは2スペースにする」「何文字以上で改行する」といったフォーマットに関するものや、
//「メソッド名は動詞で開始する」のようにコードの書き方について定めたものなどを含みます。
//Eclipseには、デフォルトでフォーマットに関するコーディング規約が設定されています。
//ショートカット「shift + command + F（Ctrl + Shift + F）」を用いると、
//その規約に沿ったソースコードに整形できます。

// クラスブロックの始まり
public class Ready02 {
	// メソッドブロックの始まり (インデントしてわかりやすくする)
	
	// mainメソッド：プログラムを実行する時に最初に呼び出されるメソッド
	// public static void main(String... args) { とも書ける。
	public static void main(String[] args) {
        // メソッドの処理を記述
        System.out.println("Hello World!");
	    // System.out.println はJavaの標準出力用メソッド
	    // 後に続く括弧内の内容を、文字列として出力
    } 
}

//このプログラムは、「クラス→メソッド→メソッド内の処理」の順番で入れ子になった構造です。
//内側にあるものは外側よりもインデントのレベルを下げて揃えることで、見通しをよくしています。
//上記のショートカットキーを実行すると、こうしたインデント揃えを自動で行い、
//同じレベルにあるものを分かりやすくしてくれるというわけです。インデントはコード整形の一例で、
//それ以外にもルールに則った変更が適用されます。
